version: '3.8'

services:
  # üåç FRONT-END (Public) # Check previous config dockerfile
  #  front-app:
  #    build: ./front-app
  #    container_name: front-app
  #    ports:
  #      - "80:80"
  #    networks:
  #      - my_private_network
  #    env_file:
  #      - .env
  front-app:
    build: ./front-app
    container_name: front-app
    ports:
      - '3000:3000'
    volumes:
      - ./front-app:/front-app
      - /front-app/node_modules
    stdin_open: true
    tty: true
    depends_on:
      - api-gateway

  # üöÄ API GATEWAY (Seul service expos√©)
  api-gateway:
    build: ./api-gateway
    container_name: api-gateway
    restart: always
    ports:
      - '2999:2999'
    env_file:
      - ./api-gateway/.env
    volumes:
      - ./api-gateway:/api-gateway
      - /api-gateway/node_modules
    depends_on:
      - auth-service
      - product-service
      - config-service
      - facturation-service

  # üîí AUTH SERVICE (Priv√©)
  auth-service:
    build: ./auth-service
    container_name: auth-service
    restart: always
    env_file:
      - ./auth-service/.env
    volumes:
      - ./auth-service:/auth-service
      - /auth-service/node_modules
    depends_on:
      mysql-auth:
        condition: service_healthy

  # üóÑÔ∏è BASE DE DONN√âES (MySQL AUTH)
  mysql-auth:
    image: mysql:8
    restart: always
    container_name: mysql-auth
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: auth-db
    ports:
      - '3307:3306'
    volumes:
      - mysql-auth-data:/var/lib/mysql
    healthcheck:
      test: ['CMD', 'mysqladmin', 'ping', '-h', 'localhost', '-ppassword']
      interval: 5s
      timeout: 3s
      retries: 5

  # üîí PRODUCT SERVICE (Priv√©)
  product-service:
    build: ./product-service
    container_name: product-service
    restart: always
    env_file:
      - ./product-service/.env
    volumes:
      - ./product-service:/product-service
      - /product-service/node_modules
    depends_on:
      mysql-product:
        condition: service_healthy

  # üóÑÔ∏è BASE DE DONN√âES (MySQL PRODUCT)
  mysql-product:
    image: mysql:8
    restart: always
    container_name: mysql-product
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: product-db
    ports:
      - '3308:3306'
    volumes:
      - mysql-prod-data:/var/lib/mysql
    healthcheck:
      test: ['CMD', 'mysqladmin', 'ping', '-h', 'localhost', '-ppassword']
      interval: 5s
      timeout: 3s
      retries: 5

  # üîí CONFIG SERVICE (Priv√©)
  config-service:
    build: ./config-service
    container_name: config-service
    restart: always
    env_file:
      - ./config-service/.env
    volumes:
      - ./config-service:/config-service
      - /config-service/node_modules
    depends_on:
      mysql-config:
        condition: service_healthy

  # üóÑÔ∏è BASE DE DONN√âES (MySQL CONFIG)
  mysql-config:
    image: mysql:8
    restart: always
    container_name: mysql-config
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: config-db
    ports:
      - '3309:3306'
    volumes:
      - mysql-config-data:/var/lib/mysql
    healthcheck:
      test: ['CMD', 'mysqladmin', 'ping', '-h', 'localhost', '-ppassword']
      interval: 5s
      timeout: 3s
      retries: 5

  # üîí FACTURATION SERVICE (Priv√©)
  facturation-service:
    build: ./facturation-service
    container_name: facturation-service
    restart: always
    env_file:
      - ./facturation-service/.env
    volumes:
      - ./facturation-service:/facturation-service
      - /facturation-service/node_modules
    depends_on:
      mysql-facturation:
        condition: service_healthy

  # üóÑÔ∏è BASE DE DONN√âES (MySQL FACTURATIO)
  mysql-facturation:
    image: mysql:8
    restart: always
    container_name: mysql-facturation
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: facturation-db
    ports:
      - '3310:3306'
    volumes:
      - mysql-facturation-data:/var/lib/mysql
    healthcheck:
      test: ['CMD', 'mysqladmin', 'ping', '-h', 'localhost', '-ppassword']
      interval: 5s
      timeout: 3s
      retries: 5

  # üöö DELIVERY SERVICE (Priv√©)
  delivery-service:
    build: ./delivery-service
    container_name: delivery-service
    restart: always
    env_file:
      - ./delivery-service/.env
    volumes:
      - ./delivery-service:/delivery-service
      - /delivery-service/node_modules
    depends_on:
      mysql-delivery:
        condition: service_healthy

  # üóÑÔ∏è BASE DE DONN√âES (MySQL DELIVERY)
  mysql-delivery:
    image: mysql:8
    restart: always
    container_name: mysql-delivery
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: delivery-db
    ports:
      - '3311:3306'
    volumes:
      - mysql-delivery-data:/var/lib/mysql
    healthcheck:
      test: [ 'CMD', 'mysqladmin', 'ping', '-h', 'localhost', '-ppassword' ]
      interval: 5s
      timeout: 3s
      retries: 5

  # üì¨ Mail SERVICE (Priv√©)
  mail-service:
    build: ./mail-service
    container_name: mail-service
    restart: always
    env_file:
      - ./mail-service/.env
    volumes:
      - ./mail-service:/mail-service
      - /mail-service/node_modules
  #    depends_on: dependre de rabbitmq
  #      mysql-facturation:
  #        condition: service_healthy

  # üêá Message BROKER (Public)
  broker-service:
    image: rabbitmq:4.0-management
    build: ./broker-service
    container_name: broker-service
    restart: always
    ports:
      - 5672:5672
      - 15672:15672

volumes:
  mysql-auth-data:
  mysql-prod-data:
  mysql-config-data:
  mysql-facturation-data:
  mysql-delivery-data:
